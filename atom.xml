<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BigsHuangMr</title>
  
  <subtitle>初入江湖请多多指教！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-01T12:39:51.840Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>HuangMr</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java通过JDBC连接数据库（二）</title>
    <link href="http://yoursite.com/2019/12/01/Java%E9%80%9A%E8%BF%87JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2019/12/01/Java%E9%80%9A%E8%BF%87JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2019-12-01T07:45:45.000Z</published>
    <updated>2019-12-01T12:39:51.840Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;上篇文章只是简单的对数据库进行了初步连接，并没有对数据库中的数据进行简单的CRUD操作，本篇文章介绍的是Java中如何实现对数据库的CRUD操作。</p><a id="more"></a><hr><p><strong>介绍：</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;CRUD是指对数据库的数据进行增，删，改，查依赖于基础的SQL语句和上篇文章介绍数据库的基本连接。</p><hr><p><strong>准备：</strong></p><ol><li><p>在数据库中新建一份表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE emp(</span><br><span class="line"> empno        INT,PRIMARY KEY,AUTO_INCREAMENT #-- 员工编号设置为主键并且自增。</span><br><span class="line"> ename        VARCHAR(50), #-- 姓名</span><br><span class="line"> job        VARCHAR(50), #-- 职位</span><br><span class="line"> mgr        INT, #-- 上级员工编号</span><br><span class="line"> hiredate    DATE,#-- 入职日期</span><br><span class="line"> sal        DECIMAL(7,2),#--工资</span><br><span class="line"> comm        decimal(7,2),#-- 奖金</span><br><span class="line"> deptno        INT #-- 部门编号</span><br><span class="line">) ;</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>插入数据</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO emp values(7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,&apos;1980-12-17&apos;,800,NULL,20); </span><br><span class="line">INSERT INTO emp values(7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-02-20&apos;,1600,300,30);</span><br><span class="line">INSERT INTO emp values(7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-02-22&apos;,1250,500,30);</span><br><span class="line">INSERT INTO emp values(7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,&apos;1981-04-02&apos;,2975,NULL,20);</span><br><span class="line">INSERT INTO emp values(7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-09-28&apos;,1250,1400,30);</span><br><span class="line">INSERT INTO emp values(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,&apos;1981-05-01&apos;,2850,NULL,30);</span><br><span class="line">INSERT INTO emp values(7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,&apos;1981-06-09&apos;,2450,NULL,10);</span><br><span class="line">INSERT INTO emp values(7788,&apos;SCOTT&apos;,&apos;ANALYST&apos;,7566,&apos;1987-04-19&apos;,3000,NULL,20);</span><br><span class="line">INSERT INTO emp values(7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,&apos;1981-11-17&apos;,5000,NULL,10);</span><br><span class="line">INSERT INTO emp values(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,&apos;1981-09-08&apos;,1500,0,30);</span><br><span class="line">INSERT INTO emp values(7876,&apos;ADAMS&apos;,&apos;CLERK&apos;,7788,&apos;1987-05-23&apos;,1100,NULL,20);</span><br><span class="line">INSERT INTO emp values(7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,&apos;1981-12-03&apos;,950,NULL,30);</span><br><span class="line">INSERT INTO emp values(7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,&apos;1981-12-03&apos;,3000,NULL,20);</span><br><span class="line">INSERT INTO emp values(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,&apos;1982-01-23&apos;,1300,NULL,10);</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>在Java中实现CRUD操作</p><ol><li><p>构建实体类与表结构对应并且满足JavaBean规范：（就是：私有自身的属性对外提供公共的访问接口，在Java的实体类中构造方法只有一个且无参；自身的属性全部设为私有；提供公共的Getter与Settter方法。）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpBean</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer empno;</span><br><span class="line">    <span class="keyword">private</span> String ename;</span><br><span class="line">    <span class="keyword">private</span> String job;</span><br><span class="line">    <span class="keyword">private</span> Integer mgr;</span><br><span class="line">    <span class="keyword">private</span> Date hiredate;</span><br><span class="line">    <span class="keyword">private</span> Double sal;</span><br><span class="line">    <span class="keyword">private</span> Double comm;</span><br><span class="line">    <span class="keyword">private</span> Integer deptno;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EmpBean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getEmpno</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> empno;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmpno</span><span class="params">(Integer empno)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.empno = empno;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ename;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEname</span><span class="params">(String ename)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ename = ename;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getJob</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> job;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJob</span><span class="params">(String job)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.job = job;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getMgr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mgr;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMgr</span><span class="params">(Integer mgr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mgr = mgr;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getHiredate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hiredate;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHiredate</span><span class="params">(Date hiredate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hiredate = hiredate;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getSal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sal;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSal</span><span class="params">(Double sal)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sal = sal;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getComm</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> comm;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setComm</span><span class="params">(Double comm)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.comm = comm;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getDeptno</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> deptno;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDeptno</span><span class="params">(Integer deptno)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.deptno = deptno;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"EmpBean&#123;"</span> +</span><br><span class="line">                <span class="string">"empno="</span> + empno +</span><br><span class="line">                <span class="string">", ename='"</span> + ename + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", job='"</span> + job + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", mgr="</span> + mgr +</span><br><span class="line">                <span class="string">", hiredate="</span> + hiredate +</span><br><span class="line">                <span class="string">", sal="</span> + sal +</span><br><span class="line">                <span class="string">", comm="</span> + comm +</span><br><span class="line">                <span class="string">", deptno="</span> + deptno +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>为了方便测试我重现了toString()方法。</p><ol start="2"><li>在Java中添加数据库CRUD操作的方法：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataBaseCRUD</span> </span>&#123;</span><br><span class="line">    <span class="comment">//用于处理SQL语句</span></span><br><span class="line">    <span class="keyword">private</span> PreparedStatement statement;</span><br><span class="line">    <span class="comment">//建立JDBC的连接对象</span></span><br><span class="line">    <span class="keyword">private</span> Connection connection;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DataBaseCRUD</span><span class="params">()</span></span>&#123;</span><br><span class="line">        JDBCDemo jdbcDemo = <span class="keyword">new</span> JDBCDemo();</span><br><span class="line">        connection = jdbcDemo.connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对数据库进行增加操作。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> empBean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean类型用于判断操作是否成功，true成功，false失败</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addUser</span><span class="params">(EmpBean empBean)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        String sql = <span class="string">"insert into emp(ename,job,mgr,hiredate,sal,comm,deptno) values(?,?,?,?,?,?,?)"</span>;</span><br><span class="line">        statement = connection.prepareStatement(sql);</span><br><span class="line">        statement.setString(<span class="number">1</span>,empBean.getEname());</span><br><span class="line">        statement.setString(<span class="number">2</span>,empBean.getJob());</span><br><span class="line">        statement.setInt(<span class="number">3</span>,empBean.getMgr());</span><br><span class="line">        statement.setDate(<span class="number">4</span>, (Date) empBean.getHiredate());</span><br><span class="line">        statement.setDouble(<span class="number">5</span>,empBean.getSal());</span><br><span class="line">        statement.setDouble(<span class="number">6</span>,empBean.getComm());</span><br><span class="line">        statement.setInt(<span class="number">7</span>,empBean.getDeptno());</span><br><span class="line">        <span class="keyword">return</span> statement.executeUpdate()&gt;<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对数据进行删除操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> empno</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true为成功，反之失败</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteUser</span><span class="params">(Integer empno)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        String sql = <span class="string">"delete from emp where empno = ?"</span>;</span><br><span class="line">        statement = connection.prepareStatement(sql);</span><br><span class="line">        statement.setInt(<span class="number">1</span>,empno);</span><br><span class="line">        <span class="keyword">return</span>  statement.executeUpdate()==<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对数据进行更新操作也就是修改表中已经存在的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> empBean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true为成功反之失败</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updateUse</span><span class="params">(EmpBean empBean)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        String sql = <span class="string">"update emp set ename=?,job=?,mgr=?,hiredate=?,sal=?,comm=?,deptno=? where empno=?"</span>;</span><br><span class="line">        statement = connection.prepareStatement(sql);</span><br><span class="line">        statement.setString(<span class="number">1</span>,empBean.getEname());</span><br><span class="line">        statement.setString(<span class="number">2</span>,empBean.getJob());</span><br><span class="line">        statement.setInt(<span class="number">3</span>,empBean.getMgr());</span><br><span class="line">        statement.setDate(<span class="number">4</span>, (Date) empBean.getHiredate());</span><br><span class="line">        statement.setDouble(<span class="number">5</span>,empBean.getSal());</span><br><span class="line">        statement.setDouble(<span class="number">6</span>,empBean.getComm());</span><br><span class="line">        statement.setInt(<span class="number">7</span>,empBean.getDeptno());</span><br><span class="line">        statement.setInt(<span class="number">8</span>,empBean.getEmpno());</span><br><span class="line">        <span class="keyword">return</span> statement.executeUpdate()&gt;<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对数据进行查询操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 因为这个写的查询是查询数据表中的所有数据，所以得用集合进行存储。返回的也是一个集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;EmpBean&gt; <span class="title">findAll</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        List&lt;EmpBean&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        String sql = <span class="string">"select * from emp"</span>;</span><br><span class="line">        statement = connection.prepareStatement(sql);</span><br><span class="line">        ResultSet resultSet = statement.executeQuery();</span><br><span class="line">        <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">            EmpBean empBean = <span class="keyword">new</span> EmpBean();</span><br><span class="line">            empBean.setEmpno(resultSet.getInt(<span class="number">1</span>));</span><br><span class="line">            empBean.setEname(resultSet.getString(<span class="number">2</span>));</span><br><span class="line">            empBean.setJob(resultSet.getString(<span class="number">3</span>));</span><br><span class="line">            empBean.setMgr(resultSet.getInt(<span class="number">4</span>));</span><br><span class="line">            empBean.setHiredate(resultSet.getDate(<span class="number">5</span>));</span><br><span class="line">            empBean.setSal(resultSet.getDouble(<span class="number">6</span>));</span><br><span class="line">            empBean.setComm(resultSet.getDouble(<span class="number">7</span>));</span><br><span class="line">            empBean.setDeptno(resultSet.getInt(<span class="number">8</span>));</span><br><span class="line">            list.add(empBean);</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><p>}</p><p>​       在这次示例对SQL语句的处理采用的是prepareStatement这个类并没有采用Statement这个类。   因为prepareStatement是对SQL语句进行了预编译，对应地执行SQL语句所需要的时间减少了， 以及大大地加快了数据库访问速度。最重要的是它在一定程度上可以防止SQL注入避免损失。<br>​<br>3. 测试：<br>一般测试我们可以采用Junit进行单元测试，但由于暂时没有找到Junit的jar包本次是采用通过main方法进行测试。</p><ol><li><p>查询所有：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    DataBaseCRUD dataBaseCRUD = <span class="keyword">new</span> DataBaseCRUD();</span><br><span class="line">    List&lt;EmpBean&gt; list = dataBaseCRUD.findAll();</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>​            </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;上篇文章只是简单的对数据库进行了初步连接，并没有对数据库中的数据进行简单的CRUD操作，本篇文章介绍的是Java中如何实现对数据库的CRUD操作。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java中通过JDBC连接数据库（一）</title>
    <link href="http://yoursite.com/2019/11/28/Java%E4%B8%AD%E9%80%9A%E8%BF%87JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://yoursite.com/2019/11/28/Java%E4%B8%AD%E9%80%9A%E8%BF%87JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2019-11-28T09:19:42.000Z</published>
    <updated>2019-12-01T07:40:01.180Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;Java中如何得到用户存储的在数据库中的数据，通过JDBC来实现Java对数据库的访问。</p><a id="more"></a><p><strong>简介：</strong></p><ol><li><p>ODBC(开放数据库连接)：是微软公司提供的一组对数据库访问规范化标准API。</p></li><li><p>JDBC:是OBDC的Java版本。由Sun公司提出的使用Java访问数据库的。</p></li><li><p>JDBC的体系结构分为两层：</p><ol><li>JDBC Driver Interface（驱动程序管理窗口）。</li><li>JDBC API（一系列的接口，它使得应用程序可以进行数据库的连接，执行SQL语句并返回结果集。）</li></ol></li><li><p><a href="https://baike.baidu.com/item/JDBC%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F/20866650?fr=aladdin" target="_blank" rel="noopener">JDBC的驱动程序</a>：根据访问数据库的技术不同，JDBC驱动的程序相应的分为了四种类型。不同的驱动有着不一样的特性以及使用方法。</p><ol><li>JDBC-ODBC桥驱动程序（JDBC-ODBC Brige Driver）</li><li>部分Java的本地JDBC API驱动程序</li><li>纯Java的数据库中间件驱动程序</li><li>纯Java的JDBC驱动程序（通常使用的是这种方式）</li></ol></li></ol><hr><p><strong>准备：</strong></p><p>&nbsp;&nbsp;各数据库厂商都提供对JDBC的支持，我们在对数据库进行连接时需要对应数据库的相关驱动程序文件，我使用的MySQL数据库所导入的就是MySQL的文件（<a href="http://central.maven.org/maven2/mysql/mysql-connector-java/" target="_blank" rel="noopener">mysql-connector-java.jar</a>）<br><strong>注意：</strong> 程序驱动文件的版本要与你数据库的版本对应，如果不匹配会出现错误!</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo</span> </span>&#123;</span><br><span class="line"><span class="comment">//数据库驱动的基本信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String Driver = <span class="string">"com.mysql.cj.jdbc.Driver"</span>;</span><br><span class="line"><span class="comment">//数据库以及表的链接地址</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">"jdbc:mysql://localhost:3306/testemp"</span>;</span><br><span class="line"><span class="comment">//数据库的用户名</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String USE = <span class="string">"root"</span>;</span><br><span class="line">    <span class="comment">//数据库的密码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PassWord = <span class="string">"root"</span>;</span><br><span class="line">    Connection connection = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JDBCDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.加载数据库驱动</span></span><br><span class="line">            Class.forName(Driver);</span><br><span class="line">            <span class="comment">//2.建立连接</span></span><br><span class="line">            connection = DriverManager.getConnection(URL,USE,PassWord);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.connection;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3.关闭连接，释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>我的MySQL版本是8.0及以后的版本所以JDBC驱动的加载为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String Driver = <span class="string">"com.mysql.cj.jdbc.Driver"</span>;</span><br></pre></td></tr></table></figure><p>如果你的版本是8.0之前的话驱动的加载为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String Driver = <span class="string">"com.mysql.jdbc.Driver"</span>;</span><br></pre></td></tr></table></figure><p>我的数据库连接地址由于我修改数据库的配置文件所以不用设置SSL连接、时区、字符集以及数据库的引擎，但如果你没有更改数据库的配置文件你需要设置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">"jdbc:mysql://localhost:3306/testemp?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&amp;useSLL=false"</span>;</span><br></pre></td></tr></table></figure><p>字符集的设置是为了防止中文乱码，时区设置是当你进行数据库时间操作时与你所在的时区一致。</p><p>8.0之前版本的数据库连接地址应该为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">"jdbc:mysql://localhost:3306/testemp?useUnicode=true&amp;autoReconnect=true"</span>;</span><br></pre></td></tr></table></figure><p>其中localhost:3306是指本地地址加上对应的端口号，如果你使用IP地址的话，应该将localhost:3306改为对应的IP地址加上对应的端口号。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;Java中如何得到用户存储的在数据库中的数据，通过JDBC来实现Java对数据库的访问。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://yoursite.com/2019/11/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/11/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-11-26T10:38:55.000Z</published>
    <updated>2019-12-01T10:30:23.366Z</updated>
    
    <content type="html"><![CDATA[<p> <strong>Java中的基本集合框架</strong></p><a id="more"></a><p>&nbsp;&nbsp;&nbsp;&nbsp;在Java中集合与数组类似都用于存储Java中所有数据类型的对象，但与数组相比它优点在于数组一旦被创建它的数组长度就不能被改变而集合的优点就是在于集合是可以改变长度的且数组存储的数据类型只有一种而集合可以存储多种的数据类型。</p><hr><ol><li><p><strong>Collection（接口）集合</strong><br><img src="https://i.imgur.com/pQ8kfxu.png" alt=""><br>由上图可知List集合，Set集合，Vector集合都实现了Collection集合这个接口，但List集合，Set集合和Vector集合三者有着很大的区别。</p><ol><li>List（接口）集合：是一个有序的Collection,这里有序是指存入集合的顺序和从集合中取出来的顺序是一致的。而且List集合可以存储重复的元素。在List集合里有派生了ArrayList与LinkedList它两又有许多的不同之处。<ol><li>ArrayList：底层是基于动态数组构成的，存储情况是一段连续的内存空间，所以在查询数组的某一个元素时Arraylist的速度要快于Linkedlist。且ArrayList是线程不安全的。</li><li>LinkedList：底层是基于链表构成的，存储情况可能是一段联系的内存空间也可能是一段离散的空间，由于是链表结构它就存在指针当进行增加元素或者删除元素时只要根据对应的指针进行操作而ArrayList则需要对全部元素进行一个移位所以在增加与删除操作时LinkedList集合快于ArrayList集合，LinkedList也是线程不安全的</li></ol></li><li>Set（接口）集合：是一个无序的Collection集合，而且它能保证元素的唯一不能存储重复元素。在Set集合中也产生了不一样的子类集合如HashSet和TreeSet。<ol><li>HashSet：底层是基于hash表来实现的，通过hashcode()方法来比较两个元素的hash码进行排序。允许存在null值但只能出现一次因为null的hash码都相同所以不能重复出现。</li><li>TreeSet：底层是基于红黑树，不允许存储null值。</li></ol></li><li>Vector集合：底层基于数组与ArrayList基本相似但不同之处是Vector集合是线程安全的。</li></ol></li><li><p><strong>Map（接口）集合</strong><br><img src="https://i.imgur.com/eEZZFUk.png" alt=""><br>Map集合与Collection集合有所不同的是Map集合是双列集合也就是（key-value）的形式，key值不能重复出现而value可以出现多次。</p><ol><li>TreeMap集合：底层采用的红黑树构成的，它是一个有序的集合，可以根据创建映射时所提供的比较器Comparator来进行比较排序</li><li>HashMap集合：底层采用的是hash表，是无序集合且线程是不安全的。允许（null-null）的组合存在</li><li>HashTable集合：底层也是采用hash表，但它是线程安全的，它无论是key还是value都不允许出现null。</li></ol></li></ol><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;strong&gt;Java中的基本集合框架&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
